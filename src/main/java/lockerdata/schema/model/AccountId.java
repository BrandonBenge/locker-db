package lockerdata.schema.model;
// Generated Feb 17, 2018 5:14:42 PM by Hibernate Tools 5.2.8.Final

import java.math.BigDecimal;
import java.util.Date;

/**
 * AccountId generated by hbm2java
 */
public class AccountId implements java.io.Serializable {

	private int counter;
	private String fullName;
	private Double tagNumber;
	private Date datePaid;
	private String type;
	private BigDecimal amountPaid;
	private BigDecimal balenceDue;
	private boolean ztill;

	public AccountId() {
	}

	public AccountId(int counter, boolean ztill) {
		this.counter = counter;
		this.ztill = ztill;
	}

	public AccountId(int counter, String fullName, Double tagNumber, Date datePaid, String type, BigDecimal amountPaid,
			BigDecimal balenceDue, boolean ztill) {
		this.counter = counter;
		this.fullName = fullName;
		this.tagNumber = tagNumber;
		this.datePaid = datePaid;
		this.type = type;
		this.amountPaid = amountPaid;
		this.balenceDue = balenceDue;
		this.ztill = ztill;
	}

	public int getCounter() {
		return this.counter;
	}

	public void setCounter(int counter) {
		this.counter = counter;
	}

	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	public Double getTagNumber() {
		return this.tagNumber;
	}

	public void setTagNumber(Double tagNumber) {
		this.tagNumber = tagNumber;
	}

	public Date getDatePaid() {
		return this.datePaid;
	}

	public void setDatePaid(Date datePaid) {
		this.datePaid = datePaid;
	}

	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	public BigDecimal getAmountPaid() {
		return this.amountPaid;
	}

	public void setAmountPaid(BigDecimal amountPaid) {
		this.amountPaid = amountPaid;
	}

	public BigDecimal getBalenceDue() {
		return this.balenceDue;
	}

	public void setBalenceDue(BigDecimal balenceDue) {
		this.balenceDue = balenceDue;
	}

	public boolean isZtill() {
		return this.ztill;
	}

	public void setZtill(boolean ztill) {
		this.ztill = ztill;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof AccountId))
			return false;
		AccountId castOther = (AccountId) other;

		return (this.getCounter() == castOther.getCounter())
				&& ((this.getFullName() == castOther.getFullName()) || (this.getFullName() != null
						&& castOther.getFullName() != null && this.getFullName().equals(castOther.getFullName())))
				&& ((this.getTagNumber() == castOther.getTagNumber()) || (this.getTagNumber() != null
						&& castOther.getTagNumber() != null && this.getTagNumber().equals(castOther.getTagNumber())))
				&& ((this.getDatePaid() == castOther.getDatePaid()) || (this.getDatePaid() != null
						&& castOther.getDatePaid() != null && this.getDatePaid().equals(castOther.getDatePaid())))
				&& ((this.getType() == castOther.getType()) || (this.getType() != null && castOther.getType() != null
						&& this.getType().equals(castOther.getType())))
				&& ((this.getAmountPaid() == castOther.getAmountPaid()) || (this.getAmountPaid() != null
						&& castOther.getAmountPaid() != null && this.getAmountPaid().equals(castOther.getAmountPaid())))
				&& ((this.getBalenceDue() == castOther.getBalenceDue()) || (this.getBalenceDue() != null
						&& castOther.getBalenceDue() != null && this.getBalenceDue().equals(castOther.getBalenceDue())))
				&& (this.isZtill() == castOther.isZtill());
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getCounter();
		result = 37 * result + (getFullName() == null ? 0 : this.getFullName().hashCode());
		result = 37 * result + (getTagNumber() == null ? 0 : this.getTagNumber().hashCode());
		result = 37 * result + (getDatePaid() == null ? 0 : this.getDatePaid().hashCode());
		result = 37 * result + (getType() == null ? 0 : this.getType().hashCode());
		result = 37 * result + (getAmountPaid() == null ? 0 : this.getAmountPaid().hashCode());
		result = 37 * result + (getBalenceDue() == null ? 0 : this.getBalenceDue().hashCode());
		result = 37 * result + (this.isZtill() ? 1 : 0);
		return result;
	}

}
